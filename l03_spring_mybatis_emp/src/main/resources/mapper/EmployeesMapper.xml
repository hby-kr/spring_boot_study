<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
MyBatis의 mapper.xml 파일은 SQL 쿼리를 정의하고, 이를 Java 객체와 매핑하는 설정 파일
이 파일은 주로 SQL 쿼리, 결과 매핑, 파라미터 매핑 등을 처리   -->

<!--
<mapper> 태그; mapper.xml 파일의 최상위 태그로, MyBatis 매퍼 파일을 정의
namespace 속성은 Java 인터페이스의 이름을 지정하며, SQL 매핑을 위한 고유 식별자 역할을 합니다. 이 값은 Java 인터페이스의 메서드와 매핑됩니다.
-->
<mapper namespace="com.tj703.l03_spring_mybatis_emp.mapper.EmployeesMapper">

    <!--  <resultMap> 태그;  복잡한 결과 매핑을 정의. 쿼리의 결과가 Java 객체로 어떻게 매핑될지를 설정할 때 사용
    id: resultMap의 고유 식별자. type: 결과를 매핑할 Java 클래스의 타입을 지정합니다.  -->
    <resultMap id="empMap" type="com.tj703.l03_spring_mybatis_emp.model.Employees">
        <!--  <id>: PK를 매핑합니다. /  <result>: 일반적인 필드를 매핑합니다.-->
        <id column="emp_no" property="empNo"/>
        <result column="birth_date" property="birthDate"/>
        <result column="first_name" property="firstName"/>
        <result column="last_name" property="lastName"/>
        <result column="gender" property="gender"/>
        <result column="hire_date" property="hireDate"/>
    </resultMap>

    <!--  <select> 태그; 데이터베이스에서 데이터를 조회하는 쿼리를 정의
      id: 쿼리의 고유 식별자로, Java 인터페이스 메서드와 매핑됩니다.
      parameterType: 쿼리 파라미터로 전달될 Java 객체의 타입을 지정합니다.
      resultType: 쿼리 결과를 매핑할 Java 클래스의 타입을 지정합니다.
      resultType: 단순히 쿼리 결과를 한 번에 매핑할 객체의 타입을 지정합니다. 단순한 매핑에는 resultType을 사용하면 됩니다.
      resultMap: 더 복잡한 매핑을 할 때 사용합니다. 예를 들어, 하나의 쿼리에서 여러 테이블을 조인해서 결과를 가져올 때, resultMap을 사용하여 각 열을 올바르게 매핑합니다.-->
    <select id="findAll" resultMap="empMap">
        select *
        from employees.employees
        limit 10
    </select>

      <select id="findByEmpNo" resultMap="empMap">
        select * from employees.employees where emp_no = #{empNo}
      </select>

</mapper>

<!--
<sql> 태그; 재사용 가능한 SQL 조각을 정의합니다. 자주 사용하는 SQL 문을 여러 쿼리에서 재사용할 때 유용합니다.
<sql>의 속성 ;  id: SQL 조각의 고유 식별자.


-->

